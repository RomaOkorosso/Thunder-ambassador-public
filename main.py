import telebot
import config
import database_functions
import help_func
from telebot import types

roman = config.roman
bot = telebot.TeleBot(config.main)
bot.send_message(roman, f'bot started at {help_func.get_now_time()}')
game_bot = 820567103

locations_to_find = ['‚õè –®–∞—Ö—Ç–∞ –ö–æ–±–æ–ª—å–¥–æ–≤', 'üëπ–ü–µ—â–µ—Ä–∞ –¢—Ä–æ–ª–ª–µ–π', 'üë®‚Äçüé§–í–æ—Ä–æ–≤—Å–∫–æ–π –ø—Ä–∏—Ç–æ–Ω', 'üßú‚Äç‚ôÄ–ë—É—Ö—Ç–∞ —Ä—É—Å–∞–ª–æ–∫',
                     'üè∞–ó–∞–º–æ–∫ "–ì–æ–ª—É–±–∞—è –ö—Ä–æ–≤—å"', 'üßü‚Äç‚ôÇ–ó–∞–±—Ä–æ—à–µ–Ω–Ω–∞—è —Ç—é—Ä—å–º–∞', 'üé™–û—Ä–≥—Ä–∏–º–º–∞—Ä', 'üè∞–•–æ–≥–≤–∞—Ä—Ç—Å',
                     'üåí–¢–µ–º–Ω–∞—è —Å—Ç–æ—Ä–æ–Ω–∞',
                     'üå≥ –õ–µ—Å–æ–ø–∏–ª–∫–∞', '‚õè –†—É–¥–Ω–∞—è —à–∞—Ö—Ç–∞', 'üèú –ö–∞—Ä—å–µ—Ä', '‚ú® –ú–∞–≥–∏—á–µ—Å–∫–∞—è –ø–æ–ª—è–Ω–∞', 'üóø –ü–ª–∞—Ç–æ –¥–µ–º–æ–Ω–æ–≤',
                     'üè§ –õ–æ–º–±–∞—Ä–¥', 'üèö –ü—Ä–∏–µ–º –º–µ—Ç–∞–ª–ª–æ–ª–æ–º–∞', 'üå¥ –ü–∞–ª—å–º–æ–≤–∞—è —Ä–æ—â–∞']


def make_log(message):
    log = f'<code>{message.chat.id}\n{message.chat.title}\n{message.from_user.id} @ {message.from_user.username}\n' \
        f'</code>"{message.text}"\n{help_func.get_now_time()}'
    return log


@bot.message_handler(commands=['start', 'help', 'me', 'time', 'db', 'raid_time', 'donate', 'make_pin', 'check_squad',
                               'edit_coord'])
def main_commands(message):
    try:
        chat_id = message.chat.id
        msg = str(message.text)
        bot.send_message('-1001235101505', make_log(message), parse_mode='HTML')
        if msg == '/start' or msg == '/start@@ThunderAmbassadorBot':
            bot.send_message(chat_id, '–ü—Ä–∏–≤–µ—Ç, —è –≤–∏–∂—É —Å–∫–æ—Ä—É—é –±—É—Ä—é, –ø–æ–∑–≤–æ–ª—å –º–Ω–µ –ø–æ–º–æ—á—å —Ç–µ–±–µ?')
        elif msg == '/help' or msg == '/help@ThunderAmbassadorBot':
            bot.send_message(chat_id, '–ï—Å–ª–∏ —Ç—ã –Ω–µ –ø–æ–Ω–∏–º–∞–µ—à—å –∫–∞–∫ –º–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, —è –¥–∞–º —Ç–µ–±–µ –ø–æ–¥—Å–∫–∞–∑–∫—É //—Å—Å—ã–ª–∫–∞//')
        elif msg == '/me' or msg == '/me@ThunderAmbassadorBot':
            msg = database_functions.get_user_info(message.from_user.id)
            bot.send_message(chat_id, msg, parse_mode="HTML")
        elif msg == '/db' and message.from_user.id == roman:
            database_functions.create_db()
        elif '/raid_time' == msg or '/raid_time@ThunderAmbassadorBot' == msg:
            bot.send_message(chat_id, help_func.get_time_to_raid(), parse_mode="HTML")
        elif '/donate' in msg:
            usr = message.from_user.id
            markup = types.InlineKeyboardMarkup(row_width=1)
            btn = types.InlineKeyboardButton('–Ø–Ω–¥–µ–∫—Å–î–µ–Ω—é—à–∫–∏', url=f'https://money.yandex.ru/to/410019603804361?comment='
            f'–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ä–∞–∑–≤–∏—Ç–µ –±–æ—Ç–∞ –æ—Ç {usr}')
            markup.add(btn)
            bot.send_message(message.chat.id,
                             f'<b>–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å —à—Ç–∞–Ω—ã –∏ –∏–∑–±–∞–≤–∏—Ç—å –æ—Ç –≥–æ–ª–æ–¥–Ω–æ–π —Å–º–µ—Ä—Ç–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –º–æ–∂–Ω–æ –ø–æ —ç—Ç–∏–º'
                             f' —Å—Å—ã–ª–∫–∞–º:\n–ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ª—Å, –µ—Å–ª–∏ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–µ–µ</b>',
                             parse_mode='HTML', disable_notification=True, disable_web_page_preview=True,
                             reply_markup=markup)
        elif '/time' == msg or '/time@ThunderAmbassadorBot' == msg:
            bot.send_message(chat_id, f"–°–µ–π—á–∞—Å {help_func.get_now_time()} –ø–æ UTC +0000")
        elif '/make_pin' in msg and message.from_user.id in [roman, 479807824, 381843491]:
            pin_txt = msg[msg.find('/make_pin')::]
            # pin_id = bot.send_message()
        elif '/check_squad' in msg and message.from_user.id in [roman, 479807824, 381843491]:
            squad_name = msg[msg.find(' ') + 1:]
            msg_txt = str(database_functions.get_squad(squad_name))
            if len(msg_txt) > 34000:
                while len(msg_txt) > 34000:
                    right = msg_txt.find('\n', 34000)
                    sep = msg_txt[0:right]
                    msg_txt = msg_txt[right:]
                    bot.send_message(message.chat.id, sep, parse_mode='HTML')
            else:
                bot.send_message(message.chat.id, msg_txt, parse_mode='HTML')



    except Exception as err:
        err = str(err) + f'\n at {message.chat.id}\n{message.chat.title}'
        bot.send_message(roman, err)


@bot.message_handler(content_types=['text'])
def send_msg(message):
    try:
        bot.send_message('-1001235101505', make_log(message), parse_mode='HTML')
        chat_id = message.chat.id
        msg = str(message.text)
        if 'UID: ' in msg and '–°–æ–±—ã—Ç–∏–µ:' in msg and 'üë§' in msg and message.forward_from is not None:
            if message.forward_from.id == game_bot and (message.date - 60 * 5 <= message.forward_date or
                                                        message.from_user.id == roman):
                user_id = str(message.from_user.id)
                check_id = msg[msg.find('UID: ') + len('UID: '):]
                if user_id == check_id:
                    update_info = database_functions.save_profile(user_id, message.from_user.username,
                                                                  *help_func.hero_parser(msg))
                    bot.send_message(message.chat.id, update_info, parse_mode='HTML')
                else:
                    bot.send_message(chat_id, '–ú–Ω–µ –∂–∏–∑–Ω–µ–Ω–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º –∏–º–µ–Ω–Ω–æ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å')

    except Exception as err:
        err = str(err) + f'\n at {message.chat.id}\n{message.chat.title}'
        bot.send_message(roman, err)


bot.polling(none_stop=True)
